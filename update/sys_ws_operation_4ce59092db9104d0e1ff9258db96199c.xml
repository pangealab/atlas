<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json,application/xml,text/xml</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri>/api/x_snc_labs_atlas/create/event</default_operation_uri>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>POST</http_method>
        <name>Event (v1)</name>
        <operation_script><![CDATA[/* Expected event format:
{
  "title": "My alert",
  "ruleId": 1,
  "ruleName": "Load peaking!",
  "ruleUrl": "http://url.to.grafana/db/dashboard/my_dashboard?panelId=2",
  "state": "alerting",
  "imageUrl": "http://s3.image.url",
  "message": "Load is peaking. Make sure the traffic is real and spin up more webfronts",
  "evalMatches": [
    {
      "metric": "requests",
      "tags": {
		  "app" : "Service Name"
	  },
      "value": 122
    }
  ]
}
*/

(function process( /*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

    var requestBody = request.body.data;

    if (Object.keys(requestBody).length == 0) {
        response.setError(new sn_ws_err.BadRequestError('No event found'));
		gs.warn("Grafana failed to create event: No event");
        return;
    }

    var event = requestBody;

    var event_GR = new GlideRecord('em_event');
    event_GR.initialize();

    event_GR.source = "Grafana";

	event_GR.ci_type = 'cmdb_ci_service_discovered';
    event_GR.resource = event.ruleName;
    event_GR.metric_name = event.ruleId;
	
	if (event.evalMatches[0]){
		var id_attributes = {};
		id_attributes.name = event.evalMatches[0].tags.app;
		id_attributes.sys_class_name = 'cmdb_ci_service_discovered';
		event_GR.ci_identifier = JSON.stringify(id_attributes);
		event_GR.node = event.evalMatches[0].tags.app;
	}
	
	if (event.message) { event_GR.description = event.message; }
	else { event_GR.description = event.ruleName; }
    event_GR.message_key = event.ruleUrl + "|" + event.ruleId;
    event_GR.resolution_state = "New";

    switch (event.state) {
        case 'alerting':
            event_GR.severity = 2;
            break;
        case 'ok':
            event_GR.severity = "0";
            event_GR.resolution_state = 'Closing';
            break;
        default:
            event_GR.severity = 3;
    }

    event_GR.additional_info = JSON.stringify(event);

    event_GR.insert();

	return "Event created with sys_id " + event_GR.sys_id;

})(request, response);
]]></operation_script>
        <operation_uri>/api/x_snc_labs_atlas/v1/create/event</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/event</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description/>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>ewilliams</sys_created_by>
        <sys_created_on>2019-11-25 15:39:49</sys_created_on>
        <sys_id>4ce59092db9104d0e1ff9258db96199c</sys_id>
        <sys_mod_count>24</sys_mod_count>
        <sys_name>Event (v1)</sys_name>
        <sys_package display_value="labs_atlas" source="x_snc_labs_atlas">6d50983edb0508143b4a90b6db9619fc</sys_package>
        <sys_policy/>
        <sys_scope display_value="labs_atlas">6d50983edb0508143b4a90b6db9619fc</sys_scope>
        <sys_update_name>sys_ws_operation_4ce59092db9104d0e1ff9258db96199c</sys_update_name>
        <sys_updated_by>aangelo</sys_updated_by>
        <sys_updated_on>2019-12-17 16:58:00</sys_updated_on>
        <web_service_definition display_value="NOW CLI API Create Event">eca55852db9104d0e1ff9258db9619b6</web_service_definition>
        <web_service_version display_value="v1">4efaf115db390810e1ff9258db961967</web_service_version>
    </sys_ws_operation>
</record_update>
